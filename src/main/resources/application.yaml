# SpringBoot Properties: https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html
spring:
  application:
    name: parking-plus-service

  # Zipkin is the destination environment for the traces and it's disabled in development
  # https://stackoverflow.com/questions/56525260/disable-distributed-tracing-for-development/56529683#56529683
  zipkin:
    enabled: false

  # sleuth is the traces aggregator that's enabled by default, since the gradle dependency is declared with zipkin
  # https://medium.com/@lombos.monika/distributed-tracing-latency-analysis-for-microservices-4ae3b82f3537
  # Read Case 3 for these to propagate the the HTTP Headers
  sleuth:
    baggage:
      remote-fields:
        - "supercash_tid"
        - "supercash_uid"
      correlation-fields:
        - "supercash_tid"
        - "supercash_uid"

# https://reflectoring.io/springboot-logging/#changing-the-color-of-log-output-in-the-console
# https://www.baeldung.com/spring-boot-changing-log-level-at-runtime
logging:
  level:
    org.springframework.core.env: warn
    org.springframework.jndi: warn
    org.springframework.web: DEBUG
    # See which config files are loaded in a given environment
    org.springframework.boot.context.config: DEBUG
    # Log level for the app container
    #org.apache.tomcat: DEBUG
    #org.apache.catalina: DEBUG
    #cash.super_.platform.client.parkingplus.api.ServicoPagamentoTicket2Api: DEBUG
    cash.super_.platform.service.configuration: DEBUG
    cash.super_.platform.service.parkingplus: DEBUG

feign:
  client:
    config:
      default:
        loggerLevel: FULL

# here we say that we want to enable accesslog
# https://howtodoinjava.com/spring-boot2/logging/embedded-server-logging-config/
# https://stackoverflow.com/questions/36780680/how-do-you-tell-spring-boot-to-send-the-embedded-tomcats-access-logs-to-stdout/54566643#54566643
server:
  #port: 8080 default
  tomcat:
    accesslog:
      enabled: true
      # /dev/stdout is standard output, so we want tomcat
      # to write to that file descriptor.
      directory: /dev
      prefix: stdout
      buffered: false
      suffix:
      file-date-format:
      # https://tomcat.apache.org/tomcat-8.0-doc/config/valve.html
      # https://howtodoinjava.com/spring-boot2/logging/embedded-server-logging-config/
      # https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html
      pattern: "[ACCESS] %h %t %{org.apache.catalina.AccessLog.RemoteAddr}r http_method=%m http_path=%U http_query=%q http_protocol=%H http_status=%s latency_total=%Dms latency_commit=%Fms response_size=%Bbytes %S %u tid=%{supercash_tid}i uid=%{supercash_uid}i x_b3_traceid=%{X-B3-TraceId}o"

# SpringFox Swagger
# https://stackoverflow.com/questions/39401010/why-is-v2-api-docs-the-default-url-when-using-springfox-and-swagger2/39453151#39453151
springfox:
  documentation:
    swagger:
      v2:
        path: /swagger/docs/v2

management:
  endpoints:
    web:
      exposure:
        include: "*"

  # Liveness and Readiness probe endpoints only work with this setup
  # https://www.baeldung.com/spring-liveness-readiness-probes#actuator-probes
  endpoint:
    health:
      probes:
        enabled: true

# Super cash platform
cash:
  super:
    platform:
      service:
        parkingplus:
          # Our API Version
          apiVersion: v1

          # Extracted from the REST API at https://demonstracao.parkingplus.com.br/servicos/v2/api-docs
          host: https://demonstracao.parkingplus.com.br/servicos

          # Value provided by parking plus
          apiKeyId: 1

          # The ide of the garagem
          parkingLotId: 1

          # Our user ID for the API
          userKey: wps2@18pofe12g5412

          # https://cloud.spring.io/spring-cloud-netflix/multi/multi_spring-cloud-feign.html#_feign_logging
          clientLogLevel: HEADERS

          # Duration the results will stay in memory cache to then be evicted
          salesCacheDuration: 5

          # java.util.concurrent.TimeUnit https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/TimeUnit.html
          salesCacheTimeUnit: DAYS

          # kubernetes readiness probe, reusing the cache and updating it
          # https://www.baeldung.com/spring-boot-kubernetes-self-healing-apps#3-readiness-example
          healthProbe:
            readinessInterval: 1
            readinessTimeUnit: HOURS