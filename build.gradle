buildscript {
    ext {
        springBootVersion = '2.3.8.RELEASE'
    }
    repositories {
        mavenCentral()

        // For src/gradle/tests.gradle
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

		// For src/gradle/tests
		classpath 'com.adarshr:gradle-test-logger-plugin:2.1.1'
		// For src/gradle/jacoco
        // JDK 15 not working yet https://github.com/emeraldpay/polkaj/commit/9f4baeb09baa95cbe25a223817378240aa4909b2
		classpath 'com.github.ksoichiro:gradle-console-reporter:0.6.2'
	}
}

plugins {
    id 'application'
    id 'jacoco'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

// PROCESS RESOURCES FROM src/main/resources INTO THE BUILD DIR
apply from: 'src/gradle/build-info.gradle'

// Test Infrastructure
apply from: 'src/gradle/tests.gradle'

// CODE COVERAGE: JaCoCo enabled
apply from: 'src/gradle/jacoco.gradle'

// CODE COVERAGE: JaCoCo enabled
//apply from: 'src/gradle/swagger-client-stubs.gradle'

group = 'cash.super.platform.service'
version = '1.0.0-RELEASE'

// https://github.com/gradle/gradle/issues/14500
// TODO: Upgrade to 15 when Jacoco supports https://github.com/emeraldpay/polkaj/commit/9f4baeb09baa95cbe25a223817378240aa4909b2
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(14)
    }
}

bootJar {
    archiveBaseName = rootProject.name
    archiveVersion =  rootProject.version
    manifest {
        attributes('Implementation-Title': 'Parking Lot Service',
                   'Implementation-Version': commit + '-' + branch)
    }
}

// For SNAPSHOT dependencies, pull them right away
// https://stackoverflow.com/questions/42058626/how-to-get-newest-snapshot-of-a-dependency-without-changing-version-in-gradle/42058780#42058780
configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
    mavenLocal()
    mavenCentral()

    // https://github.com/gradle/gradle/issues/5571#issuecomment-403879538
    // https://gitlab.com/gitlab-org/gitlab/-/issues/207920#note_443711163
    maven {
        url "https://gitlab.com/api/v4/projects/22268428/packages/maven"
        credentials(HttpHeaderCredentials) {
            name "Private-Token"
            value "XyVw_6pxiiXAvHU6du9r" //System.env.GITLAB_TOKEN
        }
        authentication {
            header(HttpHeaderAuthentication)
        }
    }
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

ext {
	set('springCloudVersion', "Hoxton.SR8")
	jackson_version = "2.12.3"
	feign_jackson_version = "11.1"
	feign_version = "11.1"
	feign_form_version = "3.8.0"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {

    //////////////////////////////////////////////////
    //  ****** General project dependencies ******  //
    //////////////////////////////////////////////////
    /*
     README FIRST - Instructions for adding new dependencies:
       - In all projects dependency (please, keep alphabetic order)
    */
    implementation("com.fasterxml.jackson.core:jackson-core:$jackson_version")
    implementation("com.fasterxml.jackson.core:jackson-databind:$jackson_version")
    implementation("com.fasterxml.jackson.core:jackson-annotations:$jackson_version")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version")
    //implementation("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jackson_version")
    //implementation("com.fasterxml.jackson.datatype:jackson-datatype-joda:$jackson_version")
    implementation("com.google.code.findbugs:jsr305:3.0.2")
    implementation("com.google.guava:guava:30.1.1-jre")
    implementation("io.github.openfeign:feign-core:$feign_version")
    implementation("io.github.openfeign:feign-jackson:$feign_version")
    implementation("io.github.openfeign:feign-slf4j:$feign_version")
    implementation("io.github.openfeign.form:feign-form:$feign_form_version")
    implementation("io.springfox:springfox-boot-starter:3.0.0")
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation ("org.apache.commons:commons-lang3:3.0")

    implementation("org.openjdk.nashorn:nashorn-core:15.2")
    annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation("org.springframework.cloud:spring-cloud-starter-zipkin")
    implementation("org.springframework.cloud:spring-cloud-starter-openfeign")
    implementation("org.springframework.plugin:spring-plugin-core")

    /////////////////////////////////////////////////
    //  ****** Specific project dependency ******  //
    /////////////////////////////////////////////////
    
    // Parking Plus
    implementation group: "cash.super_.platform.client", name: "parking-plus-client-feign", version: "1.0.0-SNAPSHOT"
    testImplementation("org.hsqldb:hsqldb:2.5.1")
    implementation("org.postgresql:postgresql")
}

/*
test {

	useJUnitPlatform()
}
*/
